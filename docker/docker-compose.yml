version: '2'

volumes:
  mysql: {}
  prometheus_data: {}
  grafana_data: {}

services:

  # Web server services
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ./config/nginx/certs:/etc/nginx/certs:ro
    network_mode: bridge

  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    restart: always
    # Dummy port for bug reported here: https://github.com/jwilder/nginx-proxy/issues/438
    expose:
      - 1234
    volumes_from:
      - nginx
    volumes:
      - ./config/nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    network_mode: bridge

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: always
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    volumes_from:
      - nginx
    volumes:
      - ./config/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge

  rabbitmq:
    image: rabbitmq:3.6.6
    container_name: rabbitmq
    # RabbitMQ stores data based on the hostname so this should remain the same
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=lunchbreak
      - RABBITMQ_DEFAULT_PASS=lunchbreak
    ports:
      - 5672
    volumes:
      - /var/lib/rabbitmq
    network_mode: bridge

  # Monitoring services
  prometheus:
    image: prom/prometheus:v1.5.2
    container_name: prometheus
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
      - '-storage.local.memory-chunks=100000'
    environment:
      - METRICS_RESOLUTION=5s
    restart: unless-stopped
    links:
      - alertmanager
      - nodeexporter
      - cadvisor
    expose:
      - 9090
    ports:
      - 9090:9090
    network_mode: bridge

  alertmanager:
    image: prom/alertmanager:master
    container_name: alertmanager
    volumes:
      - ./config/alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    ports:
      - 9093:9093
    network_mode: bridge

  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    restart: unless-stopped
    expose:
      - 9100
    network_mode: bridge

  cadvisor:
    image: google/cadvisor:v0.24.1
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    network_mode: bridge

  grafana:
    image: grafana/grafana:4.1.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - grafana.env
    restart: unless-stopped
    links:
      - prometheus
    expose:
      - 3000
    ports:
      - 3000:3000
    network_mode: bridge
